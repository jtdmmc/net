<Window x:Class="MT.PrismApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:selectors="clr-namespace:MT.PrismApp.Resource.Selectors" 
        Title="{Binding Title}" Height="1000" Width="1500"
         ResizeMode ="NoResize" WindowStyle="None" Background="Transparent"
        WindowStartupLocation="CenterOwner" MouseLeftButtonDown ="Window_MouseLeftButtonDown">
    <Window.Resources>
        <Style TargetType="Label">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#a1a3a6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="True" CornerRadius="4">
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}"
                                       TextBlock.Foreground="{TemplateBinding Foreground}" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2f96b4"/>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2a89a4"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#d9d6c3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00a6ac"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="NormalForegroundBrush" Color="#999999"/>
        <SolidColorBrush x:Key="HoverForegroundBrush" Color="#424242"/>
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White"/>

        <!-- 悬停状态的画刷 -->
        <SolidColorBrush x:Key="HoverBackgroundBrushKey" Color="#2a89a4" />
        <!-- 选中(激活)状态的画刷 -->
        <SolidColorBrush x:Key="SelectedActiveBackgroundBrushKey" Color="#2a89a4" />
        <!-- 选中(悬停)状态的画刷 -->
        <SolidColorBrush x:Key="SelectedHoverBackgroundBrushKey" Color="#2a89a4" />
        <!-- 选中(失效)状态的画刷 -->
        <SolidColorBrush x:Key="SelectedInactiveBackgroundBrushKey" Color="#2a89a4" />
        <!--前面小三角样式-->
        <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Width"
                Value="13" />
            <Setter Property="Height"
                Value="13" />
            <Setter Property="Foreground" Value="{DynamicResource NormalForegroundBrush }"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="13" Height="13"  Background="Transparent">
                            <Path x:Name="ExpandPath"  HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="0"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MetroTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource NormalForegroundBrush }"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Border x:Name="Border"    
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                                <Grid   Margin="0 0 0 0 " >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"  Margin="15 0 0 0"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press" Width="Auto" HorizontalAlignment="Center"   
                                              VerticalAlignment="Center"
                                              Height="Auto"  />
                                    <ContentPresenter x:Name="PART_Header"  Margin="5 0 0 0"
                                                  Grid.Column="1" 
                                                  ContentSource="Header"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                  HorizontalAlignment="Left" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Margin="0 0 0 0">
                            </ItemsPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <!-- 选中(激活)-->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                                <Setter  Property="Foreground"
                                    Value="{StaticResource  SelectedForegroundBrush}" />
                                <Setter TargetName="Expander"  Property="Foreground"
                                    Value="{StaticResource  SelectedForegroundBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource SelectedInactiveBackgroundBrushKey}" />
                                <Setter  Property="Foreground"
                                    Value="{StaticResource SelectedForegroundBrush}" />
                                <Setter TargetName="Expander"  Property="Foreground"
                                    Value="{StaticResource  SelectedForegroundBrush}" />
                            </MultiTrigger>
                            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource HoverBackgroundBrushKey}" />
                                <Setter  Property="Foreground"
                                    Value="{StaticResource  HoverForegroundBrush}" />
                                <Setter TargetName="Expander"  Property="Foreground"
                                    Value="{StaticResource  HoverForegroundBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource SelectedHoverBackgroundBrushKey}" />
                                <Setter  Property="Foreground"
                                    Value="{StaticResource  SelectedForegroundBrush}" />
                                <Setter TargetName="Expander"  Property="Foreground"
                                    Value="{StaticResource  SelectedForegroundBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
            <!-- default to 0 -->
            <Setter Property="BorderThickness"
                Value="0" />
            <Setter Property="SnapsToDevicePixels"
                Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource GrayBrush9}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle"
                Value="{StaticResource MetroTreeViewItemStyle}" />
        </Style>
        <!--一级目录数据模板-->
        <HierarchicalDataTemplate x:Key="FirstDataTemplate" DataType="MenuViewModel" ItemsSource="{Binding SubItems}">
            <Grid Background="Transparent"  Height="42"
                  HorizontalAlignment="Left" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image x:Name="image" VerticalAlignment="Center" Source="{Binding Icon}" Width="16" Height="16" Margin="0,0,2,2"></Image>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"
                           FontSize="21" ></TextBlock>
                <Grid.ToolTip>
                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" TextWrapping="Wrap" MaxWidth="200" ></TextBlock>
                </Grid.ToolTip>
            </Grid>
        </HierarchicalDataTemplate>
        <!--二级目录数据模板-->
        <HierarchicalDataTemplate x:Key="SecondDataTemplate" DataType="MenuViewModel" ItemsSource="{Binding SubItems}">
            <Grid Background="Transparent"  Height="40"
                  HorizontalAlignment="Left" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock  Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"
                           FontSize="20" ></TextBlock>
                <Grid.ToolTip>
                    <TextBlock  VerticalAlignment="Center" Text="{Binding Name}" TextWrapping="Wrap" MaxWidth="200" ></TextBlock>
                </Grid.ToolTip>
            </Grid>
        </HierarchicalDataTemplate>
        <!--模板选择器-->
        <selectors:TreeItemDataTemplateSelector x:Key="myDataTemplateSelector"
                                          FirstTemplate="{StaticResource FirstDataTemplate}"
                                          SecondTemplate="{StaticResource SecondDataTemplate}"/>

    </Window.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="320"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <!--menu-->
        <StackPanel Background="#0c212b">
            <StackPanel Orientation="Horizontal" Height="80" Margin="0 0 0 0" Background="#121a2a">
                <Image Width="40" Height="40" Margin="10 0 0 0"
                               HorizontalAlignment="Left"  VerticalAlignment="Center"
                        Source="pack://application:,,,/MT.PrismApp.Resources;component/Images/logoicon_u295.png"/>
                <Label FontSize="22"  Foreground="White"  Margin="10 0 0 0"
                           Content="聚芯5000ADC™检测平台" />
            </StackPanel>
            <TreeView    x:Name="tree"  BorderThickness="0"  Background="Transparent"
                         ItemsSource="{Binding Menus}" 
                              ItemTemplateSelector="{StaticResource myDataTemplateSelector}" >
                <!--<TreeView.ItemTemplate>
                    <HierarchicalDataTemplate  ItemsSource="{Binding SubItems}">
                        <TextBlock Text="{Binding Name}"  />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>-->

                <hc:Interaction.Triggers>
                    <hc:EventTrigger EventName="SelectedItemChanged" >
                        <hc:InvokeCommandAction Command="{Binding SelectedMenuCmd}" 
                                               CommandParameter="{Binding ElementName=tree,Path=SelectedItem}"/>
                    </hc:EventTrigger>
                </hc:Interaction.Triggers>
            </TreeView>
        </StackPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--header-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" 
                            VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10 0 20 0">
                    <Menu HorizontalAlignment="Right" VerticalAlignment="Center"
                      FontSize="16" Foreground="#F6F6F6" Background="Transparent">
                        <MenuItem Header="{Binding UserName}"  >
                            <MenuItem  Header="切换账户"  FontSize="14" Width="100" 
                                       Command="{Binding SwitchUserCommand}"/>
                            <Separator />
                            <MenuItem  Header="退出系统" FontSize="14"  Width="100" 
                                       Command="{Binding CloseCommand}"/>
                        </MenuItem>
                    </Menu>
                    <Image Width="20" Height="20" Margin="5 0 10 0"
                               HorizontalAlignment="Left"  VerticalAlignment="Center"
                        Source="pack://application:,,,/MT.PrismApp.Resources;component/Images/u456.jpg"/>
                    <Button Width="20" Height="20" Command="{Binding ShowAboutWindowCmd}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Ellipse Stroke="#7bbfea" StrokeThickness="1">
                                    </Ellipse>
                                    <TextBlock Text="?" FontSize="12"  Foreground="#7bbfea" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>



                <Border Grid.Row="1" Margin="10 0 10 0" Height="1"  BorderThickness="1"   BorderBrush="Black" Opacity="0.2"/>
            </Grid>
            <!--user-->
            <Grid Grid.Row="1" Background="#d3d7d4"  >
                <ContentControl prism:RegionManager.RegionName="ContentRegion"  Margin="20 20 0 0"/>
            </Grid>

        </Grid>
    </Grid>
</Window>
